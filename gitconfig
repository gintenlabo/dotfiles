[include]
	path = .gitconfig.local
[core]
	editor = vim
	excludesfile = ~/.gitignore_global
[alias]
	current-branch = "branch --show-current"
	current-rev = "rev-parse --short HEAD"
	current-rev-full = "rev-parse HEAD"
	push-current = "-c push.default='current' push"
	mg = "merge --no-ff"
	ff = "merge --ff --ff-only"
	fa = "fetch --all"
	sw = "switch"
	swd = "switch --detach"
	df = "diff"
	dfc = "diff --cached"
	ss = "status"
	ci = "commit"
	br = "branch"
	is-merging = "!git rev-parse -q --verify MERGE_HEAD >/dev/null"
	abort-if-merging = "!f() { if git is-merging; then if [ \"$#\" -gt 0 ]; then echo \"$@\" >&2; else echo \"fatal: You have not concluded your merge (MERGE_HEAD exists).\naborting...\" >&2; fi; return 1; fi }; f"
	backup-changes-unstaging = "!git diff --quiet HEAD || (git commit -am \"backup changes on $(git current-rev)\" && git reset HEAD~)"
	backup-changes = "!if git diff --quiet --cached; then git backup-changes-unstaging; else git commit -m \"backup stage on $(git current-rev)\" && git backup-changes-unstaging && git reset --soft HEAD~; fi"
	soft-reset = "reset --soft"
	hard-reset = "!git backup-changes && git reset --hard"
	rst = "!git backup-changes && git restore"
	dft = "difftool"
	dlog = "!f() { GIT_EXTERNAL_DIFF=difft git log -p --ext-diff \"$@\"; }; f"
[merge]
	ff = false
[push]
	default = simple
[rebase]
	autosquash = true
[pull]
	ff = only
[diff]
	tool = difftastic
[difftool]
	prompt = false
[difftool "difftastic"]
	cmd = difft "$LOCAL" "$REMOTE"
[pager]
	difftool = true
